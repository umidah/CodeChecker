void insert(string word)

auto it = find(currentWords.begin(), currentWords.end(), word);
int dist = distance(currentWords.begin(), it);
if (it != currentWords.end())
	currentWordsAmount[dist].count++;
else
	wordCount wordC;
	wordC.count++;
	wordC.word = word;
	currentWords.push_back(word);
	currentWordsAmount.push_Back(wordC);
end if

//==//

int getStringValue(string word)

int s = word.size();
int amt = 0;
const char* cstr = word.c_str();
for (int x = 0; x < s; x++)
	amt = amt + cstr[x];
end for
return amt;

//==//

int vecStringValue()

int n, curr, amt = 0;
string str;
vector<wordCount> temp = this->currentWordsAmount;
sort(temp.begin, temp.end);
n = temp.size();
for(int x = 0; x < n; x++)
	str = temp[x].word;
	curr = getStringValue(str);
	curr = curr*temp[x].count;
	amt = amt + curr;
end for
return amt;